#!/bin/bash

# causes the shell to exit if any subcommand or pipeline returns a non-zero status
set -e

# This is a multi-instance app, meaning it can be installed several times independently
# The id of the app as stated in the manifest is available as $YNH_APP_ID
# The instance number is available as $YNH_APP_INSTANCE_NUMBER (equals "1", "2", ...)
# The app instance name is available as $YNH_APP_INSTANCE_NAME
#    - the first time the app is installed, YNH_APP_INSTANCE_NAME = ynhexample
#    - the second time the app is installed, YNH_APP_INSTANCE_NAME = ynhexample__2
#    - ynhexample__{N} for the subsequent installations, with N=3,4, ...
# The app instance name is probably what you are interested the most, since this is
# guaranteed to be unique. This is a good unique identifier to define installation path,
# db names, ...
app=$YNH_APP_INSTANCE_NAME

# Source app helpers
. /usr/share/yunohost/helpers

# Retrieve arguments
domain=$(ynh_app_setting_get "$app" domain)
path=$(ynh_app_setting_get "$app" path)
is_public=$(ynh_app_setting_get "$app" is_public)

#Â is_public is now a boolean field
if [ "$is_public" = "Yes" ];
then
    is_public=1
fi

# Remove trailing slash to path
path=${path%/}
#force location to be / or /foo
location=${path:-/}

# Document root
document_root=/var/www/$app
sudo mkdir -p $document_root

# Set permissions
sudo chmod 775 -R $document_root
sudo chown -hR www-data:www-data $document_root

# Append content to index.html file, for testing purpose
echo "Updated on: "$(date) >> $document_root/index.html

# Nginx configuration
sed -i "s@YNH_LOCATION@$location@g" ../conf/nginx.conf
sed -i "s@YNH_DOCUMENT_ROOT@$document_root/@g" ../conf/nginx.conf
sudo cp ../conf/nginx.conf /etc/nginx/conf.d/$domain.d/$app.conf

# Make app public if necessary
sudo yunohost app setting $app is_public -v "$is_public"
if [[ "$is_public" -ne 0 ]];
then
    sudo yunohost app setting $app unprotected_uris -v "/"
fi

# Reload Nginx and regenerate SSOwat conf
sudo service nginx reload
